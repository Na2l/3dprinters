[include fluidd.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_27001E000A50534841313020-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 350  

max_z_velocity: 50          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#max_accel: 12500
#nasser
max_accel:17000
#max_accel_to_decel: 12500
#nasser 
max_accel_to_decel: 17000

#pressure advance setting
#max_accel: 12000

# square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
#rotation_distance: 22.452161589   
#rotation_distance: 22.67668320489
rotation_distance : 22.48456130551524
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
#sensor_type: NTC 100k beta 3950
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
#nasser
#min_extrude_temp: 170
min_extrude_temp: 10

#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.0628 #nasser old
## Ender PLA
#pressure_advance: 0.0626

## Overture PLA
pressure_advance: 0.0626

## PolyLite ASA
#pressure_advance: 0.0647

##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
#run_current: 0.5
#nasser
run_current: 0.5
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 110
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3



[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan1]
##  Controller fan - FAN2
pin: PD12
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5
idle_speed:0.1

[controller_fan controller_fan2]
##  Controller fan2 - FAN3
pin: PD13
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5
idle_speed:0.1

# [heater_fan exhaust_fan]
# ##  Exhaust fan - FAN4
# pin: PD14
# max_power: 1.0
# shutdown_speed: 0
# kick_start_time: 0.5
# heater: heater_bed
# heater_temp: 30
# fan_speed: .5

[fan_generic exhaust_fan_top]
##  Exhaust fan - FAN3
pin: PD14
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5
off_below:0.1

[fan_generic exhaust_fan_bottom]
##  Exhaust fan - FAN3
pin: PD15
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5
off_below:0.1

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
  TURN_OFF_HEATERS

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:234,350
speed:100
z_hop:6

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 500
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1
pwm: TRUE
value: 0
shutdown_value: 0
# PWM frequency : 0.001 = 1ms will give a base tone of 1kHz
cycle_time: 0.0024
#--------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[virtual_sdcard]
#path: ~/virtual-sdcard
#path: /home/pi/gcode_files
path: /home/h20/printer_data/gcodes
[pause_resume]
recover_velocity: 50
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[display_status]

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175 , 175, 20  # an example

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]
recover_velocity: 50 #allows pause resume functionality.
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro beep]
gcode:
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P1000
    SET_PIN PIN=beeper VALUE=0

[gcode_macro alarm]
gcode:
    {% set C = params.S|default(0.01)|int %}
    {% for s in range(10) %}
      SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ C if C > 0 else 0.001 }
      G4 P100
      SET_PIN PIN=beeper VALUE=0  
    {% endfor %}

#####################################################################
# BTT filament sensor
#####################################################################
[filament_motion_sensor btt_smartie]
switch_pin: PG12
detection_length: 550
pause_on_runout: FALSE
runout_gcode:  FILAMENT_RUNOUT
insert_gcode:  FILAMENT_INSERTED
event_delay: 3.0
pause_delay: 0.0001
extruder: extruder
[gcode_macro FILAMENT_INSERTED]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600
    M117 Filament inserted
    PREHEAT_PLA # start heating the bed and the hotend.

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M117 Check the Filament
    alarm C=0.001
    SET_IDLE_TIMEOUT TIMEOUT=86400 # 24 hrs, to prevent from accidental movements while changing the filament
    M600
    alarm C=0.1
    
[gcode_macro M600]
gcode:
    {% set X = params.X|default(25)|float %}
    {% set Y = params.Y|default(25)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-2 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-15 F1000
    TURN_OFF_HEATERS
    RESTORE_GCODE_STATE NAME=M600_state

# [gcode_macro F_CONSUMED]
# variable_toolhead_position: 0
# variable_filament_consumed: 0
# variable_filament_lenght: 200   # length between the sensor and extruder
# gcode:
#     # save current filament consumption
#     SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=filament_consumed VALUE={printer.print_stats.filament_used}
#     # save current toolhead position
#     SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=toolhead_position VALUE={printer.toolhead.position.z}
#     # start checking filament consumption
#     UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1

# [delayed_gcode DELAY_M600]
# gcode:
#     # use set for easier reading
#     {% set consumed=printer["gcode_macro F_CONSUMED"].filament_consumed %}
#     {% set length=printer["gcode_macro F_CONSUMED"].filament_lenght %}
#     {% set position=printer["gcode_macro F_CONSUMED"].toolhead_position %}
#     # check if predetermine length is reached
#     {% if printer.print_stats.filament_used|float <= (consumed|float + length|float - position|float) %}
#       # start looping this script every second
#       UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1
#     {% else %}
#       M600
#     {% endif %}

#####################################################################
#   Macros
#####################################################################
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
# Conditional G28 (home if not already homed)
# ignore m205 commands
[gcode_macro m205]
gcode:

[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro M141]
# default_parameter_S: 0
# default_parameter_P: 0
gcode:
    {% set S = params.s|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}


[gcode_macro G32]
gcode:
  MY_G32

[gcode_macro MY_G32]
gcode:
  M117 PreHeadt PLA GO!

  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
  SAVE_GCODE_STATE NAME=__MY_G32__
  RESPOND TYPE="echo" MSG="MY_G32, EXTRUDER_TEMP : {EXTRUDER_TEMP}, BED_TEMP : {BED_TEMP}"
  PREHEAT_PLA EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
  M117 Auto bed-level GO!

  #BED_MESH_CLEAR
  #CG28                      ; Home if not homed to get everything turned on
  G28
  WIPE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
  G28
  QUAD_GANTRY_LEVEL         ; Level
  #BED_MESH_PROFILE LOAD=default
  WIPE_NOZZLE  EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
  G28
  #BED_MESH_CALIBRATE
  RESTORE_GCODE_STATE NAME=__MY_G32__
[gcode_macro CHANGE_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=_CHANGE_FILAMENT_
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28 X Y Z
  {% endif %}
 {% set EXTRUDER_TEMP = printer.material_print_temperature|default(220)|float %} 
 RESPOND TYPE="echo" MSG="CHANGE_FILAMENT, Setting extruder temp to: {EXTRUDER_TEMP}"
 M109 S{EXTRUDER_TEMP}
  G90 
  G0 X175 Y10 Z100 F50000
  RESTORE_GCODE_STATE NAME=_CHANGE_FILAMENT_
   
[gcode_macro CLEAN_NOZEL]
variable_start_x: 320
variable_start_y: 350
variable_start_z: 6

gcode:
    SAVE_GCODE_STATE NAME=_CLEAN_NOZEL_
     {% if "xyz" not in printer.toolhead.homed_axes %}
       G28 X Y Z
    {% endif %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %} 
    RESPOND TYPE="echo" MSG="CHANGE_FILAMENT, Setting extruder temp to: {EXTRUDER_TEMP}"
    M109 S{EXTRUDER_TEMP}
    M106 S255
    G1 Z50
    G1 X{start_x} Y{start_y} F6000
    G1 E20 F300
    
    WIPE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    G1 Z6 F1000
    #G90
    #G0 X5 Y5 X2 F9000
    #G0 Z0.3 F400
    #G91
    #G1 X150 E10 F3000 
    #G1 Y1 F3000 
    #G1 X-150 E10 F3000 
    #G92 E0
    #G1 Z3
    RESTORE_GCODE_STATE NAME=_CLEAN_NOZEL_

    
[gcode_macro WIPE_NOZZLE]
variable_start_x: 305
variable_start_y: 350
variable_start_z: 6
variable_wipe_dist: -50
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
 {% endif %}
 
 M117 Wipe Nozzle Go!
 {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
 {% set BED_TEMP = params.BED_TEMP|default(65)|float %} 
 RESPOND TYPE="echo" MSG="WIPE_NOZZLE, Setting extruder temp to: {EXTRUDER_TEMP}"
 M109 S{EXTRUDER_TEMP}
 
 G90  ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}
 G1 Y349
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}
 
 
[gcode_macro Center_XY]
gcode:
  SAVE_GCODE_STATE NAME=_Center_XY_
  description "Center Move Z to 10 mm above the bed move XY to center of the bed" 
  M117 Center XY Z=10
  CG28
  G90
  G0 Z10 F10000
  G0 X175 Y175 F30000
  RESTORE_GCODE_STATE NAME=_Center_XY_
[gcode_macro PREPARE_ZOFFSET]
gcode:
  PREHEAT_PLA
  G28
  WIPE_NOZZLE
  G28
  BED_MESH_CLEAR 
  QUAD_GANTRY_LEVEL 
  WIPE_NOZZLE
  G28 
  G90
  G0 X175 Y175 F30000

[gcode_macro PREHEAT_PLA]
gcode:
    # {% set EXTRUDER_TEMP = printer.material_print_temperature|default(220)|float %}
    # {% set BED_TEMP = printer.material_bed_temperature|default(65)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %}

    RESPOND TYPE="echo" MSG="PREHEAT_PLA, Setting extruder temp to: {EXTRUDER_TEMP}"
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    RESPOND TYPE="echo" MSG="PREHEAT_PLA, Setting heater_bed temp to: {BED_TEMP}"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

    #M190 S{BED_TEMP}      ; set bed temp and wait for it reach temp
    #M109 S{EXTRUDER_TEMP}    

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(220)|float %}
    {% set BED_TEMP = params.BED|default(65)|float %}
    SAVE_GCODE_STATE NAME=__PRINT_START__
    M117 Warmup
    RESPOND TYPE="echo" MSG="PRINT_START, Setting extruder temp to: {EXTRUDER_TEMP}"
    RESPOND TYPE="echo" MSG="PRINT_START, Setting BED_TEMP temp to: {BED_TEMP}"
    M190 S{BED_TEMP}      ; set bed temp and wait for it reach temp
    M109 S{EXTRUDER_TEMP}         ; M109 heat and wait for it to reach temp
    
    M117 Init
    MY_G32  EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    
    M117 Cleaning Nozel
    CLEAN_NOZEL EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    G28
    
    
    G1 Z5 F5000                        ; move head 5mm from bed surface
    M83                                ; Make the E relative independant of other axis
    M117 Autobots! Roll Out!
    RESTORE_GCODE_STATE NAME=__PRINT_START__
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M106 S0                        ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M117 Finished!                 ; display message

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.997
#*# pid_ki = 1.218
#*# pid_kd = 296.376
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.208
#*# pid_ki = 2.117
#*# pid_kd = 100.767
#*#
#*# [stepper_z]
#*# position_endstop = 0.476
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 38.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 27.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.043750, -0.005000, -0.007500, 0.027500, 0.053750
#*# 	0.091250, 0.036250, 0.038750, 0.062500, 0.086250
#*# 	0.060000, 0.005000, 0.000000, 0.030000, 0.053750
#*# 	0.087500, 0.040000, 0.036250, 0.051250, 0.078750
#*# 	0.080000, 0.027500, 0.031250, 0.033750, 0.071250
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
