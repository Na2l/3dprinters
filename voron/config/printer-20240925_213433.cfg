[include fluidd.cfg]
[include stealthburner_leds.cfg]

# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_27001E000A50534841313020-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 350  

max_z_velocity: 50          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#max_accel: 12500
#nasser
max_accel:17000
minimum_cruise_ratio=0.5

#pressure advance setting
#max_accel: 12000

# square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
# Nasser adding eddy
endstop_pin: PG10
# endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5.5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
#rotation_distance: 22.452161589   
#rotation_distance: 22.67668320489
# NASSER rotation_distance : 22.48456130551524
# rotation_distance : 13.490736783309
#rotation_distance : 13.485340488596
rotation_distance : 13.215633678824
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
#sensor_type: NTC 100k beta 3950
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF4
min_temp: 10
max_temp: 271
max_power: 1.0
#nasser
#min_extrude_temp: 170
min_extrude_temp: 10
max_extrude_only_distance: 100.0
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.0628 #nasser old
## Ender PLA
#pressure_advance: 0.0626

## Overture PLA
#pressure_advance: 0.0626

## PolyLite ASA
#pressure_advance: 0.0647

##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
#run_current: 0.5
#nasser
run_current: 0.5
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 110
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

# [probe]
# ##  Inductive Probe
# ##  This probe is not used for Z height, only Quad Gantry Leveling

# ## Select the probe port by type:
# ## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
# #pin: ~!PB7
# ## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
# pin: PG15
# ## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
# #pin: ~!PC5

# #--------------------------------------------------------------------

# x_offset: 0
# y_offset: 25.0
# z_offset: 0
# speed: 10.0
# samples: 3
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.006
# samples_tolerance_retries: 5



[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: PE5
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PA8
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan1]
##  Controller fan - FAN2
pin: PD12
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5
idle_speed:0.1

[controller_fan controller_fan2]
##  Controller fan2 - FAN3
pin: PD13
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5
idle_speed:0.1

# [heater_fan exhaust_fan]
# ##  Exhaust fan - FAN4
# pin: PD14
# max_power: 1.0
# shutdown_speed: 0
# kick_start_time: 0.5
# heater: heater_bed
# heater_temp: 30
# fan_speed: .5

[fan_generic exhaust_fan_top]
##  Exhaust fan - FAN3
pin: PD14
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5
off_below:0.1

[fan_generic exhaust_fan_bottom]
##  Exhaust fan - FAN3
pin: PD15
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5
off_below:0.1

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
  TURN_OFF_HEATERS

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:235,350
speed:100
z_hop:6

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 500
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1
pwm: TRUE
value: 0
shutdown_value: 0
# PWM frequency : 0.001 = 1ms will give a base tone of 1kHz
cycle_time: 0.0024
#--------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[virtual_sdcard]
#path: ~/virtual-sdcard
#path: /home/pi/gcode_files
path: /home/h20/printer_data/gcodes
[pause_resume]
recover_velocity: 50
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[display_status]

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic

#relative_reference_index: 12  #depracated
zero_reference_position: 175, 175

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175 , 175, 20  # an example

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]
recover_velocity: 50 #allows pause resume functionality.
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
# Enable object exclusion
[exclude_object]

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro beep]
gcode:
    
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
    SAVE_GCODE_STATE NAME=__beep__
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P1000
    SET_PIN PIN=beeper VALUE=0
    RESTORE_GCODE_STATE NAME=__beep__
[gcode_macro alarm]
gcode:
    {% set C = params.S|default(0.01)|int %}
    SAVE_GCODE_STATE NAME=__alarm__
    {% for s in range(10) %}
      SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ C if C > 0 else 0.001 }
      G4 P100
      SET_PIN PIN=beeper VALUE=0  
    {% endfor %}
    RESTORE_GCODE_STATE NAME=__alarm__
#####################################################################
# BTT filament sensor
#####################################################################
[filament_motion_sensor btt_smartie]
 switch_pin: PG12
 detection_length: 10 # 550
 pause_on_runout: True
 runout_gcode:  FILAMENT_RUNOUT
 insert_gcode:  FILAMENT_INSERTED
 event_delay: 3.0
 pause_delay: 0.0001
 extruder: extruder

#####################################################################
#   Macros
#####################################################################
[gcode_macro FILAMENT_INSERTED]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600
    M117 Filament inserted
    # PREHEAT_PLA # start heating the bed and the hotend.

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M117 Check the Filament
    alarm C=0.001
    SET_IDLE_TIMEOUT TIMEOUT=86400 # 24 hrs, to prevent from accidental movements while changing the filament
    M600
    alarm C=0.1
    
[gcode_macro M600]
gcode:
    {% set X = params.X|default(25)|float %}
    {% set Y = params.Y|default(25)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-2 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-15 F1000
    # TURN_OFF_HEATERS
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SAVE_GCODE_STATE NAME=__ZDOWN__
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
    RESTORE_GCODE_STATE NAME=__ZDOWN__
# Conditional G28 (home if not already homed)
# ignore m205 commands
[gcode_macro m205]
gcode:

[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro M141]
# default_parameter_S: 0
# default_parameter_P: 0
gcode:
    {% set S = params.s|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}


[gcode_macro BED_MESH_CALIBRATE_AND_SET_FLAG] ; This macro is used to calibrate the bed mesh and set the flag to 1
; if the value is set to 1, the bed mesh will not be calibrated again
variable_bed_calibrated: 0
gcode:
    SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE_AND_SET_FLAG VARIABLE=bed_calibrated VALUE=0


[gcode_macro BED_CALIBRATE]
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
     
  {% if printer["gcode_macro BED_MESH_CALIBRATE_AND_SET_FLAG"].bed_calibrated|int == 0 %}
    SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE_AND_SET_FLAG VARIABLE=bed_calibrated VALUE=1
    RESPOND TYPE="echo" MSG="Calibrating the bed for the first time in this session!"
    M117 QUAD_GANTRY_LEVEL GO!
    WIPE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    STATUS_HOMING
    G28 Z
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28 Z
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=20; cool it, this is to "soak" head the bed
    STATUS_HEATING
    M117 HEAT SOAK Bed!
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}         ; M109 heat and wait for it to reach temp
    SAVE_GCODE_STATE NAME=__BED_CALIBRATE__
    M117 BED_MESH_CALIBRATE GO! 
    STATUS_MESHING
    M117 Bed Mesh Go!
    
    BED_MESH_CALIBRATE
    # BED_MESH_PROFILE SAVE=new_print
    RESTORE_GCODE_STATE NAME=__BED_CALIBRATE__
  {% else %}
    M117 HEAT SOAK Bed!
    M190 S{BED_TEMP}
    G4 P600000
    M109 S{EXTRUDER_TEMP}         ; M109 heat and wait for it to reach temp
    WIPE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    G28 Z
    M117 Bed Mesh Go!
    RESPOND TYPE="echo" MSG="Bed Already calibrated in this session"
    BED_MESH_CALIBRATE
    # BED_MESH_PROFILE SAVE=new_print
  {% endif %}
  STATUS_READY

# [gcode_macro MY_G32]
# gcode:
#   M117 PreHeadt PLA GO!

#   {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
#   {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
#   SAVE_GCODE_STATE NAME=__MY_G32__
#   RESPOND TYPE="echo" MSG="MY_G32, EXTRUDER_TEMP : {EXTRUDER_TEMP}, BED_TEMP : {BED_TEMP}"
#   G28 Z
#   WIPE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
#   G28 Z
#   #BED_MESH_PROFILE LOAD=default
#   RESTORE_GCODE_STATE NAME=__MY_G32__
[gcode_macro CHANGE_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=_CHANGE_FILAMENT_
  STATUS_BUSY
  {% if "xyz" not in printer.toolhead.homed_axes %}
    STATUS_HOMING
    G28 X Y Z
  {% endif %}
 {% set EXTRUDER_TEMP = printer.material_print_temperature|default(220)|float %} 
 RESPOND TYPE="echo" MSG="CHANGE_FILAMENT, Setting extruder temp to: {EXTRUDER_TEMP}"
 STATUS_HEATING
 M109 S{EXTRUDER_TEMP}
  G90 
  G0 X175 Y10 Z100 F50000
  RESTORE_GCODE_STATE NAME=_CHANGE_FILAMENT_
  STATUS_READY

[gcode_macro CLEAN_NOZEL]
variable_start_x: 320
variable_start_y: 350
variable_start_z: 6

gcode:
    
    SAVE_GCODE_STATE NAME=__CLEAN_NOZEL__
     {% if "xyz" not in printer.toolhead.homed_axes %}
     STATUS_HOMING
       G28 X Y Z
    {% endif %}
    G1 Z50
    
    G1 X{start_x} Y{start_y} F6000
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %} 
    RESPOND TYPE="echo" MSG="CHANGE_FILAMENT, Setting extruder temp to: {EXTRUDER_TEMP}"
    M109 S{EXTRUDER_TEMP}
    M106 S255
    G1 E20 F300
    
    WIPE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    G1 Z6 F1000
    #G90
    #G0 X5 Y5 X2 F9000
    #G0 Z0.3 F400
    #G91
    #G1 X150 E10 F3000 
    #G1 Y1 F3000 
    #G1 X-150 E10 F3000 
    #G92 E0
    #G1 Z3
    RESTORE_GCODE_STATE NAME=__CLEAN_NOZEL__

    
[gcode_macro WIPE_NOZZLE]
variable_start_x: 315
variable_start_y: 350
variable_start_z: 6
variable_wipe_dist: -60
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 30

gcode:
 SAVE_GCODE_STATE NAME=__WIPE_NOZZLE__
 {% if "xyz" not in printer.toolhead.homed_axes %}
  STATUS_HOMING
  G28
 {% endif %}
 
 M117 Wipe Nozzle Go!
 {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
 {% set BED_TEMP = params.BED_TEMP|default(65)|float %} 
 RESPOND TYPE="echo" MSG="WIPE_NOZZLE, Setting extruder temp to: {EXTRUDER_TEMP}"
 STATUS_HEATING
 M109 S{EXTRUDER_TEMP}
 STATUS_CLEANING
 G90  ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}
 G1 Y349
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}
 RESTORE_GCODE_STATE NAME=__WIPE_NOZZLE__
 STATUS_READY

[gcode_macro Center_XY]
gcode:
  STATUS_BUSY
  SAVE_GCODE_STATE NAME=_Center_XY_
  description "Center Move Z to 10 mm above the bed move XY to center of the bed" 
  M117 Center XY Z=10
  STATUS_HOMING
  CG28
  G90
  G0 Z10 F10000
  G0 X175 Y175 F30000
  RESTORE_GCODE_STATE NAME=_Center_XY_

[gcode_macro PREPARE_ZOFFSET]

gcode:
  STATUS_CALIBRATING_Z
  SAVE_GCODE_STATE NAME=__PREPARE_ZOFFSET__
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %} 
  G28
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL
  STATUS_HOMING
  G28 Z
  M190 S{BED_TEMP}  
  WIPE_NOZZLE
  G28 Z
   
  G90
  G0 X175 Y175 Z10 F30000
  RESTORE_GCODE_STATE NAME=__PREPARE_ZOFFSET__
[gcode_macro PREHEAT_PLA]
gcode:
    SAVE_GCODE_STATE NAME=__PREHEAT_PLA__
    # {% set EXTRUDER_TEMP = printer.material_print_temperature|default(220)|float %}
    # {% set BED_TEMP = printer.material_bed_temperature|default(65)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
    STATUS_HEATING
    RESPOND TYPE="echo" MSG="PREHEAT_PLA, Setting extruder temp to: {EXTRUDER_TEMP}"
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    RESPOND TYPE="echo" MSG="PREHEAT_PLA, Setting heater_bed temp to: {BED_TEMP}"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    STATUS_READY
    #M190 S{BED_TEMP}      ; set bed temp and wait for it reach temp
    #M109 S{EXTRUDER_TEMP}

    RESTORE_GCODE_STATE NAME=__PREHEAT_PLA__
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    STATUS_BUSY
    SET_FAN_SPEED FAN=exhaust_fan_bottom SPEED=1
    SET_FAN_SPEED FAN=exhaust_fan_top SPEED=1
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(220)|float %}
    {% set BED_TEMP = params.BED|default(65)|float %}
    SAVE_GCODE_STATE NAME=__PRINT_START__
    M117 Warmup
    RESPOND TYPE="echo" MSG="PRINT_START, Running BED_CALIBRATE"
    
    BED_CALIBRATE  EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}

    M190 S{BED_TEMP}              ; set bed temp and wait for it reach temp
    M109 S{EXTRUDER_TEMP}         ; M109 heat and wait for it to reach temp
    
    M117 Init
    # MY_G32  EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    # M117 Cleaning Nozel
    # CLEAN_NOZEL EXTRUDER_TEMP={EXTRUDER_TEMP} BED_TEMP={BED_TEMP}
    
    G1 Z5 F5000                        ; move head 5mm from bed surface
    M83                                ; Make the E relative independant of other axis
    M117 Autobots! Roll Out!
    RESTORE_GCODE_STATE NAME=__PRINT_START__
    STATUS_BUSY
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M106 S0                        ; turn off fan
    #BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M117 Finished!                 ; display message
    STATUS_OFF
    SET_FAN_SPEED FAN=exhaust_fan_bottom SPEED=1
    SET_FAN_SPEED FAN=exhaust_fan_top SPEED=1
# This file contains pin mappings for the LDO Nitehawk-SB Toolboard
# To use this config, the firmware should be compiled for the Raspberry Pi RP2040
# Make sure to include this config *at the end* of printer.cfg to overwrite the relevent sections

# See https://docs.ldomotors.com/en/voron/nitehawk-sb#firmware-setup-and-update
# For instructions on uploading/updating klipper firmware to the PCB

## LDO Nitehawk-SB Toolboard Partial Config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] sections

## *MAKE SURE* to include this partial config file *AFTER* the main controller config. 
## This will ensure the relavent sections are overwritten by the pin mappings specified here.

[mcu nhk]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_3033393834045815-if00
restart_method: command
##--------------------------------------------------------------------

#####################################################################
#   Endstops
#####################################################################

## XES - Toolhead PCB
[stepper_x]
endstop_pin: nhk:gpio13

## YES - Toolhead PCB
[stepper_y]
endstop_pin: nhk:gpio12

#####################################################################
# 	Extruder
#####################################################################
[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24
enable_pin: !nhk:gpio25
heater_pin: nhk:gpio9
sensor_pin: nhk:gpio29
pullup_resistor: 2200

[tmc2209 extruder]
sense_resistor: 0.100
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
interpolate: false

#####################################################################
#   Fans
#####################################################################
## PCF
[fan]
pin: nhk:gpio6
#tachometer_pin: nhk:gpio17
#tachometer_ppr: 2

## HEF
[heater_fan hotend_fan]
pin: nhk:gpio5
tachometer_pin: nhk:gpio16
tachometer_ppr: 2

#####################################################################
# 	Probe
#####################################################################
## Probe Port
# [probe]
# pin: nhk:gpio10

#####################################################################
#   Lights
#####################################################################
## Stealthburner Headlights
# [neopixel headlight]
# pin: nhk:gpio7

## PCB Activity Light
[output_pin act_led]https://www.klipper3d.org/Config_Reference.html$0
pin: !nhk:gpio8

#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio21
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
##--------------------------------------------------------------------
## Uncomment below for 250mm build
#probe_points:
#    125, 125, 20

## Uncomment below for 300mm build
#probe_points:
#    155, 155, 20

## Uncomment below for 350mm build
probe_points:
   175, 175, 20

# EDDY USB
# The MCU section only applies to the Eddy USB. For Eddy Coil you will use the MCU name of the toolboard that you connected the Eddy Coil to.
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45474E621A8A22EA-if00 

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 110 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
#i2c_address:
i2c_mcu: eddy  
i2c_bus: i2c0f 
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: 21.42


# This section is only relevant for Eddy USB. Comment it out for Eddy Coil.
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[bed_mesh]
horizontal_move_z: 2
speed: 300
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 25, 25  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 325, 325 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 20, 20
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

# Uncomment this if you are using Eddy as the probe AND the homing endstop
# [safe_z_home]
# home_xy_position: 175, 175 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
# z_hop: 10
# z_hop_speed: 25
# speed: 300

###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
# [save_variables]
# filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# [force_move]
# enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
# [delayed_gcode RESTORE_PROBE_OFFSET]
# initial_duration: 1.
# gcode:
#   {% set svv = printer.save_variables.variables %}
#   {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
#     SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
#     SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
#   {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
# [gcode_macro G28]
# rename_existing: G28.1
# gcode:
#   #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
#   G28.1 {rawparams}
#   {% if not rawparams or (rawparams and 'Z' in rawparams) %}
#     PROBE
#     SET_Z_FROM_PROBE
#   {% endif %}
#   #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# [gcode_macro SET_Z_FROM_PROBE]
# gcode:
#     {% set cf = printer.configfile.settings %}
#     SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
#     G90
#     G1 Z{cf.safe_z_home.z_hop}


# # Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
# [gcode_macro Z_OFFSET_APPLY_PROBE]
# rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
# gcode:
#   SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
# [gcode_macro SET_GCODE_OFFSET]
# rename_existing: SET_GCODE_OFFSET_ORIG
# variable_restored: False  # Mark whether the var has been restored from NVM
# variable_runtime_offset: 0
# gcode:
#   {% if params.Z_ADJUST %}
#     SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#   {% endif %}
#   {% if params.Z %} 
#     {% set paramList = rawparams.split() %}
#     {% for i in range(paramList|length) %}
#       {% if paramList[i]=="Z=0" %}
#         {% set temp=paramList.pop(i) %}
#         {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
#         {% if paramList.append(temp) %}{% endif %}
#       {% endif %}
#     {% endfor %}
#     {% set rawparams=paramList|join(' ') %}
#     SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
#   {% endif %}
#   SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg


##--------------------------------------------------------------------

#####################################################################
#   Thermistors
# #####################################################################
## External Chamber Thermistor Port
# [temperature_sensor chamber_temp]
# sensor_type: Generic 3950
# sensor_pin: nhk:gpio28
# min_temp: 0
# max_temp: 100
# gcode_id: chamber_th

# [thermistor CMFB103F3950FANT]
# temperature1: 0.0
# resistance1: 32116.0
# temperature2: 40.0
# resistance2: 5309.0
# temperature3: 80.0
# resistance3: 1228.0

# [temperature_sensor nh_temp]
# ## Nitehawk PCB Sensor
# sensor_type: CMFB103F3950FANT
# sensor_pin: nhk:gpio26
# pullup_resistor: 2200
# min_temp: 0
# max_temp: 100
# gcode_id: nh_th

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.327
#*# pid_ki = 1.003
#*# pid_kd = 347.143
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.698
#*# pid_ki = 1.316
#*# pid_kd = 97.884
#*#
#*# [stepper_z]
#*# position_endstop = 0.195
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 38.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 27.0
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3211565.832,0.090000:3211057.055,0.130000:3210569.633,
#*# 	0.170000:3210132.813,0.210000:3209619.652,0.250000:3209211.241,
#*# 	0.290000:3208725.384,0.330000:3208269.546,0.370000:3207823.543,
#*# 	0.410000:3207389.012,0.450000:3206957.311,0.490000:3206547.439,
#*# 	0.530000:3206103.308,0.570000:3205686.128,0.610000:3205285.622,
#*# 	0.650000:3204928.241,0.690000:3204497.836,0.730000:3204131.650,
#*# 	0.770000:3203733.525,0.810000:3203400.866,0.850000:3203010.203,
#*# 	0.890000:3202643.729,0.930000:3202277.632,0.970000:3201936.499,
#*# 	1.010000:3201554.120,1.050000:3201235.433,1.090000:3200871.940,
#*# 	1.130000:3200529.657,1.170000:3200175.295,1.210000:3199837.290,
#*# 	1.250000:3199451.521,1.290000:3199175.445,1.330000:3198861.995,
#*# 	1.370000:3198554.648,1.410000:3198240.518,1.450000:3197953.313,
#*# 	1.490000:3197643.017,1.530000:3197360.870,1.570000:3197066.380,
#*# 	1.610000:3196785.185,1.650000:3196497.742,1.690000:3196214.141,
#*# 	1.730000:3195961.583,1.770000:3195717.378,1.810000:3195443.124,
#*# 	1.850000:3195187.604,1.890000:3194928.374,1.930000:3194702.080,
#*# 	1.970000:3194447.899,2.010000:3194186.364,2.050000:3193953.508,
#*# 	2.090000:3193727.042,2.130000:3193477.042,2.170000:3193278.612,
#*# 	2.210000:3193038.543,2.250000:3192814.654,2.290000:3192605.295,
#*# 	2.330000:3192389.285,2.370000:3192162.350,2.410000:3191976.584,
#*# 	2.450000:3191761.626,2.490000:3191565.740,2.530000:3191348.672,
#*# 	2.570000:3191169.307,2.610000:3190969.868,2.650000:3190788.986,
#*# 	2.690000:3190569.464,2.730000:3190421.612,2.770000:3190209.959,
#*# 	2.810000:3190053.851,2.850000:3189873.416,2.890000:3189691.669,
#*# 	2.930000:3189511.535,2.970000:3189354.815,3.010000:3189182.473,
#*# 	3.050000:3189033.000,3.090000:3188851.692,3.130000:3188693.631,
#*# 	3.170000:3188515.495,3.210000:3188374.273,3.250000:3188229.542,
#*# 	3.290000:3188092.942,3.330000:3187932.336,3.370000:3187795.855,
#*# 	3.410000:3187657.467,3.450000:3187506.382,3.490000:3187360.156,
#*# 	3.530000:3187229.853,3.570000:3187084.905,3.610000:3186962.326,
#*# 	3.650000:3186807.623,3.690000:3186699.248,3.730000:3186555.861,
#*# 	3.770000:3186425.589,3.810000:3186291.674,3.850000:3186190.490,
#*# 	3.890000:3186068.630,3.930000:3185946.804,3.970000:3185847.153,
#*# 	4.010000:3185723.873,4.050000:3185606.336
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 29.940833
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.000390, 0.009704, -0.003034, -0.004407, -0.014566, -0.024726, -0.027304, -0.015481, -0.024885, -0.019223, -0.019699, -0.012187, -0.003032, 0.005848, -0.003930, 0.019400, 0.015489, 0.019345, 0.019400, 0.034821
#*# 	  0.051371, 0.027109, 0.028046, 0.019345, 0.005848, -0.018326, -0.013088, -0.008272, -0.008931, -0.004053, -0.006315, -0.001074, 0.008246, 0.013094, 0.030031, 0.028570, 0.027580, 0.038677, 0.033826, 0.033357
#*# 	  0.036747, 0.047624, 0.037219, 0.018877, 0.003922, -0.004779, -0.007426, 0.001469, 0.004388, 0.012243, 0.013688, 0.005719, 0.007164, 0.022407, 0.033831, 0.046659, 0.027057, 0.046712, 0.048586, 0.062672
#*# 	  0.065460, 0.049042, 0.042456, 0.027840, 0.018420, 0.014784, 0.006420, -0.005004, 0.013560, 0.019345, 0.015018, 0.018932, 0.028046, 0.031431, 0.046712, 0.058469, 0.070682, 0.046659, 0.063130, 0.054156
#*# 	  0.055222, 0.063016, 0.049637, 0.040582, 0.033360, 0.026117, 0.001995, 0.007309, 0.014028, 0.019811, 0.022732, 0.036279, 0.030499, 0.049551, 0.050409, 0.066855, 0.061570, 0.062636, 0.067919, 0.080856
#*# 	  0.079875, 0.064381, 0.052789, 0.034821, 0.032368, 0.022261, 0.016947, 0.008712, 0.024190, 0.030031, 0.022261, 0.032892, 0.032371, 0.046203, 0.068299, 0.077802, 0.076737, 0.061269, 0.068681, 0.059823
#*# 	  0.038208, 0.044836, 0.031378, 0.015958, 0.016624, 0.008256, -0.006988, -0.013536, -0.001763, 0.009704, 0.009236, 0.011631, 0.019400, 0.027991, 0.045801, 0.042453, 0.041089, 0.044782, 0.041491, 0.061203
#*# 	  0.026583, 0.014963, 0.007309, -0.002188, -0.004779, -0.008694, -0.028852, -0.030176, -0.026735, -0.015785, -0.014171, -0.015200, -0.008296, -0.003059, 0.011165, 0.017937, 0.023722, 0.020803, 0.019342, 0.010641
#*# 	  0.024188, 0.031434, 0.022730, 0.005848, -0.001763, -0.000440, -0.009593, -0.012239, -0.008298, -0.000759, -0.000402, -0.000066, 0.005851, 0.019400, 0.027109, 0.028981, 0.034352, 0.034352, 0.024659, 0.034352
#*# 	  0.038150, 0.028515, 0.019866, 0.011633, 0.008712, -0.014459, -0.010918, -0.013219, -0.005321, 0.006464, 0.012623, 0.003456, 0.011631, 0.023719, 0.031434, 0.039669, 0.036747, 0.023722, 0.024190, 0.025651
#*# 	  0.029973, 0.028570, 0.014081, -0.008272, -0.019647, -0.015308, -0.024461, -0.029754, -0.022768, -0.010916, -0.009593, -0.005678, -0.006102, 0.014085, 0.015487, 0.020923, 0.018730, 0.009703, 0.020337, 0.026641
#*# 	  0.038311, 0.020570, -0.000441, -0.005958, -0.016155, -0.020071, -0.032348, -0.024887, -0.017477, -0.008746, -0.005678, -0.000390, -0.008746, 0.001003, 0.008243, 0.030968, 0.032921, 0.021663, 0.024555, 0.027056
#*# 	  0.043248, 0.041035, 0.025256, 0.005719, 0.009310, 0.006770, -0.007426, -0.016579, 0.002461, 0.015487, 0.022730, 0.023722, 0.023253, 0.032894, 0.041544, 0.053700, 0.050915, 0.047164, 0.056669, 0.067236
#*# 	  0.089630, 0.071542, 0.059380, 0.046257, 0.039143, 0.025125, 0.018408, 0.018408, 0.024712, 0.046203, 0.046659, 0.043874, 0.043974, 0.060545, 0.062294, 0.072137, 0.073202, 0.062219, 0.081237, 0.071542
#*# 	  0.080428, 0.069261, 0.055175, 0.042000, 0.042000, 0.033887, 0.031432, 0.018029, 0.024950, 0.048232, 0.046659, 0.047168, 0.050915, 0.060799, 0.060801, 0.068754, 0.067843, 0.068247, 0.082096, 0.085027
#*# 	  0.069261, 0.046659, 0.030499, 0.018877, 0.018408, 0.024904, 0.017326, -0.004012, -0.000441, 0.020919, 0.023253, 0.015021, 0.025125, 0.034763, 0.039143, 0.051371, 0.050462, 0.048079, 0.049497, 0.047621
#*# 	  0.059381, 0.041089, 0.016950, -0.001711, 0.015955, 0.015018, 0.009238, -0.005678, 0.008770, 0.019813, 0.019869, 0.016235, 0.022759, 0.035025, 0.029285, 0.046712, 0.046203, 0.045747, 0.052789, 0.058418
#*# 	  0.054210, 0.034821, 0.007775, -0.005678, 0.005325, 0.005368, -0.005360, -0.019129, -0.004355, 0.007306, 0.013557, 0.008246, 0.015018, 0.014028, 0.032423, 0.031902, 0.037740, 0.034297, 0.044327, 0.042962
#*# 	  0.055222, 0.040821, 0.026120, 0.016947, 0.004859, 0.013089, 0.006314, -0.006577, 0.013615, 0.026585, 0.023253, 0.016945, 0.020748, 0.031902, 0.027840, 0.042227, 0.039362, 0.042186, 0.055630, 0.063018
#*# 	  0.071453, 0.060545, 0.042568, 0.029038, 0.025649, 0.020337, 0.007778, 0.001469, 0.003922, 0.030031, 0.030965, 0.034818, 0.033360, 0.029973, 0.040819, 0.048573, 0.055223, 0.047164, 0.064079, 0.061952
#*# x_count = 20
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 324.82
#*# min_y = 25.0
#*# max_y = 324.8199999999999
